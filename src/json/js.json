[
    {
        "heading":"JavaScript Introduction",
        "content":[
            {
                "value":"JavaScript Can Change HTML Content"
            },
            {
                "value":"One of many JavaScript HTML methods is getElementById()."
            },
            {
                "value":"The example below \"finds\" an HTML element (with id=\"demo\"), and changes the element content (innerHTML) to \"Hello JavaScript\":"
            },
            {
                "value":"Example"
            },
            {
                "image":"photos/js/img1.png"
            },
            {
                "value":"JavaScript accepts both double and single quotes:"
            },
            {
                "imgae":"photos/js/img2.png"
            }
        ]
    },
    {
        "heading":"JavaScript Can Change HTML Styles (CSS)",
        "content":[
            {
                "value":"Changing the style of an HTML element, is a variant of changing an HTML attribute:"
            },
            {
                "value":"Example"
            },
            {
                "value":"photos/js/img3.png"
            }
        ]
    },









    {
        "heading":"JavaScript Where To",
        "content":[
            {
                "value":"The <script> Tag"
            },
            {
                "value":"In HTML, JavaScript code is inserted between <script> and </script> tags."
            },
            {
                "value":"Example"
            },
            {
                "image":"photos/js/img4.png"
            }
        ]
    },
    {
        "heading":"JavaScript Functions and Events",
        "content":[
            {
                "value":"A JavaScript function is a block of JavaScript code, that can be executed when \"called\" for."
            },
            {
                "value":"For example, a function can be called when an event occurs, like when the user clicks a button."
            }
        ]
    },
    {
        "heading":"JavaScript in <head> or <body>",
        "content":[
            {
                "value":"You can place any number of scripts in an HTML document."
            },
            {
                "value":"Scripts can be placed in the <body>, or in the <head> section of an HTML page, or in both."
            }
        ]
    },
    {
        "heading":"JavaScript in <head>",
        "content":[
            {
                "value":"In this example, a JavaScript function is placed in the <head> section of an HTML page."
            },
            {
                "value":"The function is invoked (called) when a button is clicked:"
            },
            {
                "value":"Example"
            },
            {
                "image":"photos/js/img5.png"
            }
        ]
    },
    {
        "heading":"JavaScript in <body>",
        "content":[
            {
                "value":"In this example, a JavaScript function is placed in the <body> section of an HTML page."
            },
            {
                "value":"The function is invoked (called) when a button is clicked:"
            },
            {
                "value":"Example"
            },
            {
                "image":"photos/js/img6.png"
            }
        
        ]
    },
    {
        "heading":"External JavaScript",
        "content":[
            {
                "value":"Scripts can also be placed in external files:"
            },
            {
                "image":"photos/js/img7.png"
            },
            {
                "value":"External scripts are practical when the same code is used in many different web pages."
            },
            {
                "value":"JavaScript files have the file extension .js."
            },
            {
                "value":"To use an external script, put the name of the script file in the src (source) attribute of a <script> tag:"
            },
            {
                "value":"Example"
            },
            {
                "image":"photos/js/img8.png"
            },
            {
                "value":"You can place an external script reference in <head> or <body> as you like."
            },
            {
                "value":"The script will behave as if it was located exactly where the <script> tag is located."
            }
        ]
    },
    {
        "heading":"External JavaScript Advantages",
        "content":[
            {
                "value":"Placing scripts in external files has some advantages:"
            },
            {
                "value":"It separates HTML and code"
            },
            {
                "value":"It makes HTML and JavaScript easier to read and maintain"
            },
            {
                "value":"Cached JavaScript files can speed up page loads"
            },
            {
                "value":"To add several script files to one page  - use several script tags:"
            },
            {
                "image":"photos/js/img9.png"
            }
        ]
    },
    {
        "heading":"External References",
        "content":[
            {
                "value":"An external script can be referenced in 3 different ways:"
            },
            {
                "value":"With a full URL (a full web address)"
            },
            {
                "value":"With a file path (like /js/)"
            },
            {
                "value":"Without any path"
            },
            {
                "value":"This example uses a full URL to link to myScript.js:"
            },
            {
                "value":"Example"
            },
            {
                "image":"photos/js/img10.png"
            }
        ]
    },















    {
        "heading":"JavaScript Output",
        "content":[
            {
                "value":"JavaScript can \"display\" data in different ways:"
            },
            {
                "value":"Writing into an HTML element, using innerHTML."
            },
            {
                "value":"Writing into the HTML output using document.write()."
            },
            {
                "value":"Writing into an alert box, using window.alert()."
            },
            {
                "value":"Writing into the browser console, using console.log()."
            }
        ]
    },
    {
        "heading":"Using innerHTML",
        "content":[
            {
                "value":"To access an HTML element, JavaScript can use the document.getElementById(id) method."
            },
            {
                "value":"The id attribute defines the HTML element. The innerHTML property defines the HTML content:"
            },
            {
                "value":"Example"
            },
            {
                "image":"photos/js/img11.png"
            }
        ]
    },
    {
        "heading":"Using document.write()",
        "content":[
            {
                "value":"For testing purposes, it is convenient to use document.write():"
            },
            {
                "image":"photos/js/img12.png"
            },
            {
                "value":"Using document.write() after an HTML document is loaded, will delete all existing HTML:"
            },
            {
                "value":"The document.write() method should only be used for testing."
            }
        ]
    },
    {
        "heading":"Using window.alert()",
        "content":[
            {
                "value":"You can use an alert box to display data:"
            },
            {
                "value":"Example"
            },
            {
                "image":"photos/js/img13.png"
            },
            {
                "value":"You can skip the window keyword."
            },
            {
                "value":"In JavaScript, the window object is the global scope object. This means that variables, properties, and methods by default belong to the window object. This also means that specifying the window keyword is optional:"
            }
        ]
    },
    {
        "heading":"Using console.log()",
        "content":[
            {
                "value":"For debugging purposes, you can call the console.log() method in the browser to display data."
            }
        ]
    },
    {
        "heading":"JavaScript Print",
        "content":[
            {
                "value":"JavaScript does not have any print object or print methods."
            },
            {
                "value":"You cannot access output devices from JavaScript."
            },
            {
                "value":"The only exception is that you can call the window.print() method in the browser to print the content of the current window."
            },
            {
                "image":"photos/js/img14.png"
            }
        ]
    },











    {
        "heading":"JavaScript Statements",
        "content":[
            {
                "image":"photos/js/img15.png"
            }
        ]
    },
    {
        "heading":"JavaScript Programs",
        "content":[
            {   
                "value":"A computer program is a list of \"instructions\" to be \"executed\" by a computer."
            },
            {
                "value":"In a programming language, these programming instructions are called statements."
            },
            {
                "value":"A JavaScript program is a list of programming statements."
            },
            {
                "value":"In HTML, JavaScript programs are executed by the web browser."
            }
        ]
    },
    {
        "heading":"JavaScript Statements",
        "content":[
            {
                "value":"JavaScript statements are composed of:"
            },
            {
                "value":"Values, Operators, Expressions, Keywords, and Comments."
            },
            {
                "value":"This statement tells the browser to write \"Hello Dolly.\" inside an HTML element with id=\"demo\":"
            },
            {
                "image":"photos/js/img16.png"
            },
            {
                "value":"Most JavaScript programs contain many JavaScript statements."
            },
            {
                "value":"The statements are executed, one by one, in the same order as they are written."
            },
            {
                "value":"JavaScript programs (and JavaScript statements) are often called JavaScript code."
            },
            {
                "value":"Semicolons separate JavaScript statements."
            },
            {
                "value":"Add a semicolon at the end of each executable statement:"
            },
            {
                "value":"When separated by semicolons, multiple statements on one line are allowed:"
            },
            {
                "image":"photos/js/img17.png"
            }
        ]
    },
    {
        "heading":"JavaScript Code Blocks",
        "content":[
            {
                "value":"JavaScript statements can be grouped together in code blocks, inside curly brackets {...}."
            },
            {
                "value":"The purpose of code blocks is to define statements to be executed together."
            },
            {
                "value":"One place you will find statements grouped together in blocks, is in JavaScript functions:"
            },
            {
                "image":"photos/js/img18.png"
            }
        ]
    },










    {
        "heading":"JavaScript Syntax",
        "content":[
            {
                "value":"JavaScript syntax is the set of rules, how JavaScript programs are constructed:"
            },
            {
                "image":"photos/js/img19.png"
            }
        ]
    },
    {
        "heading":"JavaScript Values",
        "content":[
            {
                "value":"The JavaScript syntax defines two types of values:"
            },
            {
                "value":"Fixed values"
            },
            {
                "value":"Variable values"
            },
            {
                "value":"Fixed values are called Literals."
            },
            {
                "value":"Variable values are called Variables."
            }
        ]
    },
    {
        "heading":"JavaScript Literals",
        "content":[
            {
                "value":"The two most important syntax rules for fixed values are:"
            },
            {
                "value":"1. Numbers are written with or without decimals:"
            },
            {   
                "image":"photos/js/img20.png"
            },
            {
                "value":"2. Strings are text, written within double or single quotes:"
            },
            {
                "image":"photos/js/img21.png"
            }
        ]
    },
    {
        "heading":"JavaScript Variables",
        "content":[
            {
                "value":"In a programming language, variables are used to store data values."
            },
            {
                "value":"JavaScript uses the keywords var, let and const to declare variables."
            },
            {
                "value":"An equal sign is used to assign values to variables."
            },
            {
                "value":"In this example, x is defined as a variable. Then, x is assigned (given) the value 6:"
            },
            {
                "image":"photos/js/img22.png"
            }
        ]
    },
    {
        "heading":"JavaScript Operators",
        "content":[
            {
                "value":"JavaScript uses arithmetic operators ( + - * / ) to compute values:"
            },
            {
                "image":"photos/js/img23.png"
            },
            {
                "value":"JavaScript uses an assignment operator ( = ) to assign values to variables:"
            },
            {
               "image":"photos/js/img24.png"
            }
        ]
    },
    {
        "heading":"JavaScript Expressions",
        "content":[
            {
                "value":"An expression is a combination of values, variables, and operators, which computes to a value."
            },
            {
                "value":"The computation is called an evaluation."
            },
            {
                "value":"For example, 5 * 10 evaluates to 50:"
            },
            {
                "image":"photos/js/img25.png"
            }
        ]
    },
    {
        "heading":"JavaScript Keywords",
        "content":[
            {
                "value":"JavaScript keywords are used to identify actions to be performed."
            },
            {
                "value":"The let keyword tells the browser to create variables:"
            },
            {
                "image":"photos/js/img26.png"
            },
            {
                "value":"The var keyword also tells the browser to create variables:"
            },
            {
                "image":"photos/js/img27.png"
            }
        ]
    },
    {
        "heading":"JavaScript Identifiers / Names",
        "content":[
            {
                "value":"Identifiers are JavaScript names"
            },
            {
                "value":"Identifiers are used to name variables and keywords, and functions."
            },
            {
                "value":"The rules for legal names are the same in most programming languages."
            },
            {
                "value":"A JavaScript name must begin with:"
            },
            {
                "value":"A letter (A-Z or a-z)"
            },
            {
                "value":"A dollar sign ($)"
            },
            {
                "value":"Or an underscore (_)"
            },
            {
                "value":"Subsequent characters may be letters, digits, underscores, or dollar signs."
            }
        ]
    },
    {
        "heading":"JavaScript is Case Sensitive",
        "content":[
            {
                "value":"All JavaScript identifiers are case sensitive. "
            },
            {
                "value":"The variables lastName and lastname, are two different variables:"
            },
            {
                "image":"photos/js/img28.png"
            }
        ]
    },














    {
        "heading":"JavaScript Comments",
        "content":[
            {
                "value":"JavaScript comments can be used to explain JavaScript code, and to make it more readable."
            },
            {
                "value":"JavaScript comments can also be used to prevent execution, when testing alternative code."
            }
        ]
    },
    {
        "heading":"Single Line Comments",
        "content":[
            {
                "value":"Single line comments start with //."
            },
            {
                "value":"Any text between // and the end of the line will be ignored by JavaScript (will not be executed)."
            },
            {
                "value":"This example uses a single-line comment before each code line:"   
            },
            {
                "image":"photos/js/img29.png"
            }
        ]
    },
    {
        "heading":"Multi-line Comments",
        "content":[
            {
                "value":"Multi-line comments start with /* and end with */."
            },
            {
                "value":"Any text between /* and */ will be ignored by JavaScript."
            },
            {
                "value":"This example uses a multi-line comment (a comment block) to explain the code:"
            },
            {
                "image":"photos/js/img30.png"
            }
        ]
    },
    {
        "heading":"",
        "content":[]
    },
    {
        "heading":"",
        "content":[]
    },
    {
        "heading":"",
        "content":[]
    },
    {
        "heading":"",
        "content":[]
    }
]